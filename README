----environment.pl
     
     ATTR                               Property
1- cant_players(X)               set_cant_players(C)
2- cant_factory(F)               set_cant_factory(F)
3- factory(ID, B, Y, R, G, W)    set_factory(ID, B, Y, R, G, W)
4- center(T, B, Y, R, G, W)      set_center(T, B, Y, R, G, W)

5- bag(Size, L) Size: Cantidad de tiles en la bolsa, L: lista de tiles por ejemplo [1,1,1,1,2,2,3,4,5]
6- lid(Size, L) igual que la bolsa

7-remove_tile_bag(C). deja en C uno color random de la bolsa, si la bolsa esta vacia C = -1.
                      Al llenar una factoria y la bolsa se queda vacia, esta ultima retorna el color -1 el cula no matchea 
                      con ninguno de los colores por tanto no se annadira a la factoria  

8-fill_bag(). rellena la bolsa con todos los tiles de lid, esta ultima se queda vacia
9-add_tile_lid(C). annade a la lid un tile con color C

10-remove_tiles_factory(ID, C, Cant). elimina de la factoria Id todos los tiles de color C y te deja en Cant cuantos fueron
11-remove_tiles_center(C, Cant) elimina del centro todos los tiles de color C y te deja en Cant cuantos fueron

Para ejecutar el environment haces init_play(CantPlayers).

----strategy.pl

Asumiendo que tengo un conjunto de movimientos factibles:
1- Buscar todos aquellos movimientos que completen una fila: escojo el que va a tener mayor numero de adyacencias en el wall, chequeo (*)
(*) Siempre antes de escoger uno tengo que analizar si con hacer ese se termina el juego -> Si -> Estoy ganando -> Si -> Lo escojo
                                                                                                                   No -> Alguien mas va a acabar el juego -> Si -> Lo escojo
                                                                                                                                                             No -> No lo escojo y sigo buscando
                                                                                            No-> Lo escojo

2-Buscar los que se pasen en 1 : escojo el que va a tener mayor numero de adyacencias en el wall, chequeo (*)
                                                     
3-Buscar los que se pasen en 2 :  escojo el que va a tener mayor numero de adyacencias en el wall, chequeo (*)
                                 
4-Buscar de los que no completan aquellos q van para una fila incompleta(q ya tiene alguna ficha puesta): escojo el que menos espacio vacio deja

5-Buscar de los que no completan aquellos q dejan menos espacio libre: escojo el que menos espacio vacio deja

6-Escoger el que menos fichas mande para el suelo y no termine el juego (creo q si se llega a este punto es pq las opciones que hay para poner se pasan en una cant > 2 o no es factible colocar en las escaleras por lo tanto se quiere minimizar la cant de fichas que van a ir al suelo, tambien estan las opciones que descarte por (*) por eso las vuelvo a descartar aqui)

7-Escoger el que menos fichas mande para el suelo(Si llegue a este punto es pq todas las opciones terminan el juego y puede que mandan fichas al suelo asi que entonces minimizo esta cantidad y termino el juego)  
                                           

